openapi: 3.0.3
info:
  title: Server API
  description: |
    API documentation for the server, including user authentication, listings, and company data.
  version: 1.0.0
servers:
  - url: https://rb-be.eastus2.cloudapp.azure.com
paths:
  /api/login:
    post:
      summary: User login
      description: Authenticate a user and return a JWT token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: Invalid credentials

  /api/companies:
    get:
      summary: Get company data
      description: Retrieve all company details or a specific company by ID.
      parameters:
        - name: id
          in: query
          description: Company ID
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Company data retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
        '404':
          description: Company not found

  /api/listings:
    post:
      summary: Create a new listing
      description: Adds a new listing to the database.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                listing_name:
                  type: string
                description:
                  type: string
                tags:
                  type: array
                  items:
                    type: string
      responses:
        '201':
          description: Listing created successfully
        '400':
          description: Invalid input


  /rateListing:
    post:
      summary: Rate a listing
      description: Allows users to submit a rating for a listing between 1 and 5.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                listingId:
                  type: integer
                userId:
                  type: string
                rating:
                  type: integer
      responses:
        '201':
          description: Rating submitted successfully
        '400':
          description: Rating must be between 1 and 5

  /api/organizations:
    get:
      summary: Get organization details
      description: Fetch organization details and corresponding contacts by organization name.
      parameters:
        - name: name
          in: query
          description: Organization name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Organization details retrieved successfully
        '400':
          description: No organization name provided
        '404':
          description: No matching organization found

  /saveListings:
    post:
      summary: Save or update a favorite listing
      description: Allows users to add or update their favorite listings.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                listing_id:
                  type: integer
                favouriteValue:
                  type: integer
                  enum: [0, 1]
      responses:
        '201':
          description: Favourite listing added successfully
        '200':
          description: Favourite listing updated successfully
        '400':
          description: Invalid favouriteValue


  /filteredListings:
    get:
      summary: Get filtered listings
      description: Retrieve listings filtered by search term, state, organization type, or appointment needed.
      parameters:
        - name: searchTerm
          in: query
          description: Search listings by term
          required: false
          schema:
            type: string
        - name: state
          in: query
          description: Filter by state
          required: false
          schema:
            type: string
        - name: organization_type
          in: query
          description: Filter by organization type
          required: false
          schema:
            type: string
        - name: appointment_needed
          in: query
          description: Filter by appointment needed
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Listings retrieved successfully
        '500':
          description: Internal server error

  /listingData:
    get:
      summary: Get listing data
      description: Retrieve listing details by listing ID or tag name, including ratings and favorites for the current user.
      parameters:
        - name: id
          in: query
          description: Listing ID
          required: false
          schema:
            type: integer
        - name: tagname
          in: query
          description: Filter by tag name
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Listing data retrieved successfully
        '500':
          description: Internal server error


  /api/create_password:
    post:
      summary: Create a new password
      description: Allows a user to create a password if one is not already set.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
      responses:
        '200':
          description: Password set successfully
        '400':
          description: Password is already set or not provided

  /api/logout:
    post:
      summary: Logout user
      description: Logs out the current user by clearing the authentication token.
      responses:
        '200':
          description: Logged out successfully

  /api/profile:
    get:
      summary: Get user profile
      description: Retrieves the profile details of the logged-in user, including profile picture.
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  profile_picture:
                    type: string
                    nullable: true
                  role:
                    type: string

  /api/change_password:
    post:
      summary: Change user password
      description: Allows a user to change their password.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
      responses:
        '200':
          description: Password updated successfully

  /api/change_profile_picture:
    post:
      summary: Change user profile picture
      description: Allows a user to upload and change their profile picture.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                profile_picture:
                  type: string
                  format: binary
      responses:
        '200':
          description: Profile picture updated successfully
        '400':
          description: No file provided or invalid file

  

  /api/uniqueData:
    get:
      summary: Get unique data
      description: Retrieves unique organization names and tags from the database.
      responses:
        '200':
          description: Unique data retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  uniqueNames:
                    type: array
                    items:
                      type: object
                      properties:
                        value:
                          type: string
                        label:
                          type: string
                  uniqueTags:
                    type: array
                    items:
                      type: object
                      properties:
                        value:
                          type: string
                        label:
                          type: string

  /listingCounts:
    get:
      summary: Get listing counts
      description: Retrieves counts of listings based on common search terms.
      responses:
        '200':
          description: Listing counts retrieved successfully
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: integer
                  
                  
  /recentListings:
    get:
      summary: Get recent listings
      description: Retrieve the 80 most recent listings.
      responses:
        '200':
          description: Recent listings retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object

  

          
  /api/company/{companyName}:
    get:
      summary: Get company details by name
      description: Retrieve details of a specific company by its name.
      parameters:
        - name: companyName
          in: path
          description: The name of the company to retrieve.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Company details retrieved successfully
        '404':
          description: Company not found

  /api/listing/{name}:
    get:
      summary: Get listing details by name
      description: Retrieve details of a specific listing by its name.
      parameters:
        - name: name
          in: path
          description: The name of the listing to retrieve.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Listing details retrieved successfully
        '404':
          description: Listing not found

  /updateListing:
    post:
      summary: Update a listing
      description: Allows an admin to update a listing's details.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
      responses:
        '200':
          description: Listing updated successfully
        '403':
          description: Admin privileges required
        '404':
          description: Listing not found

  /api/top_companies_with_listings:
    get:
      summary: Get top companies with listings
      description: Retrieve the top companies along with their listing counts.
      responses:
        '200':
          description: Top companies retrieved successfully
        '500':
          description: Internal server error

  /api/top_companies_with_listingsNum:
    get:
      summary: Get top companies with listing numbers
      description: Retrieve companies with their number of listings.
      parameters:
        - name: limit
          in: query
          description: Number of companies to retrieve
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Companies retrieved successfully

  /updateOrg:
    post:
      summary: Update organization details
      description: Allows an admin to update organization details.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ID:
                  type: integer
      responses:
        '200':
          description: Organization updated successfully
        '403':
          description: Admin privileges required
        '404':
          description: Organization not found

  /add-organization:
    post:
      summary: Add a new organization
      description: Allows an admin to add a new organization to the database.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Company_Name:
                  type: string
                Company_URL:
                  type: string
                Description:
                  type: string
                HQPhoneNumber:
                  type: string
      responses:
        '200':
          description: Organization added successfully
        '400':
          description: Required fields missing

  /api/manageOrgNames:
    get:
      summary: Get organization names
      description: Retrieve all organization names assigned to the user.
      responses:
        '200':
          description: Organization names retrieved successfully
    post:
      summary: Add organization name
      description: Allows a super admin to add an organization name.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                org_name:
                  type: string
      responses:
        '201':
          description: Organization name added successfully
        '400':
          description: Organization name already exists
